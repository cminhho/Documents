Good morning, my name is chung, full name is ho minh chung, i'm a student at CTU, i will gradute soon in september 2014, 
i joined TMA about 3 month ago
i've learned at TMA some technologies need to be uses and building single page application like AngularJS/Boottrap/
Javascript/Stylus/Font-awesome

Hello, my name is Ho Minh Chung and i am a student at CTU
i joined TMA about 3 month ago, i work as engerneeer at OV object, i now work in the AxS project
Comunication and computer network is my major ath the CTU
, previously, 
i've finished traning at OV object after two month. i work with ? on the OV object,
i'm a member for OV object about two months, after i've been selected to be one of the pioneers for AxS Web UI.
at OV object i've learned a lot techonologies need to be uses building single page application like:
	AngularJS, Bootstrap, Javascript, Stylus, Font-awesome
Training summary
getting stated shaping up with angularjs on codeschool.com, this course is
	Built in directive
	Forms
	Custom Directive
	and working with services
continue i learning about yeoman workflow on yeoman.io
	there tools are
		yo: the scaffolding tool from Yeoman
		bower: the package managerment tool
		grunt: the build tool
next, Assignment 1: music manager exercise
	my implementing methods is	
		source code managerment with Git tool
		building nodejs server
		install yeoman workflow & angularjs generator
		the final, learning technologied need to be uses and building single page application
when i finished assignment 1 i continued to know architecture of OmniVista Project		
	Installing OV 2500 NMS application on my desktop
	Add test component to run with project
	and building responsive group model for OV when i finish my memtor submited my code into ov project.
i also learning about javascript memory profiling and chrome devtool	
	                 

Why do you use DOM? BC i use DOM when i want to insert or delete a node on Tree DOM. (This is not supported with SAX)

Do you know decoration? > i don;t know it but i have free time, i can study it quickly

Regarding garbage collection, Object A refers to Object B and Object B refers ro Object	A, will they be collected?
> They will be collected if they are cut off from the root object		

Is there any case when you init an object and it's null?
when init the object, if the constructor throws Exception, it will be null	

Introduce about AngularJS?	
> Angularjs is a structural Javascript framework for dynamic web applications.
> Angularjs extends HTML with new attributes (Angularjs extends HTML attributes with Directive), and build data to HTML with Expression
> Angularjs is perfect for SPAs
> Angularjs is easy to learn
> Angularjs is a structural framework for dynamic web apps. It let you use HTML as your templte language and lets you extent HTML's syntax to express your application's component clearly and succinctly


Angularjs extends HTML:
> ng-app: ng-app directive defines an AngularJs application
	  ng-app directive defines the root element of an Angularjs application
	  ng-app directive will auto-bootsrtap (automatically initialize) the application when a web page is loaded				
> ng-model: ng-model directive binds element values to the application
> ng-bind: ng-bind directive binds application data to the HTML view


What you should already know?
> Before you study Angularjs, you should have a basic understanding of
	HTML, CSS, JavaScript


What the feature of HTML5 did you work on?
> muldimedia(audio, video) new Elements, new Attributes, css3 support and local storege

How about CSS3?
Styling some elements

JQuery: do the DOM manipulation

Do you do any javascript outside of Angularjs?



AngularJS limitation? when i use Angularjs i saw that it is easy to cause memory leak

Why you use angularjs: there are some reason that i used angularjs 
What the feature of Angularjs?
	Two way data-binding
	
	MVC: the MVC or Model-View-Controller pattern means a lot of different things to different people. Angularjs does not implement MVC in the traditional sense, but rather something closer to MVVM
		Model: is simply the data in the application, the model is just plain old Javascript object
		The ViewModel: is an object that provides specific data and methods to maintain(duy tri) specific(cu the) views.
			The ViewModel is the scope object that lives within the Angularjs application
			Scope is just a simple Javascipr object with a small API designed to detect(phat hien) and broadcast changes to its state.
		Controller: the controller is responsible(chiu trach nhiem) for setting initial state augmenting(tang) $scope with methods to controll behavior
	
	Dependency Injection
		AngularJS has a build-in dependency injection subsystem that helps the deverloper by making the application easier to develop, understand and test.
	
	Directives
		Directive can be used to create custom HTML tags that serve as new
		
How do you organize your code structure?
>Use Angular project structure template like Yeoman, ng-boilerplate.

Automate my workflow using tools like:
> yeoman, grunt bower


As you have already seen, Angularjs directive are HTML atttribute with an ng prefix


AngularJS Expressions
> Angularjs expressions are written inside double braces
> Angularjs expressions binds data to HTML the same way the ng-bind directive


AngularJS Controllers:
> Angularjs controller control the data of Angularjs application
> Angularjs controller are regular(thuong) Javascript Objects
> ng-controller directive defined the application controller


angularjs Events:
> ng-click directive defines an Angularjs click event.
> ng-show directive defines the visibility of an application (show or hide HTML elements)
	> the value is true makes the element visible
	> the value ng-show="false" make the element unvisible

AngularJS Modules
> Angularjs module defines your applications
> all your controller should belong to a module 

service(name, value)
> 
value(name, value)
> Register a value service with the $injector, such as a string, a number, an array, an object or a function. 
> Value services are similar to constant service, except that they cannot be injection into a module configulation function but they can be overridden by an Angularjs decoration

constant(name, value)
> injected into a module configulation function and it cannot be overridden by an decoration

One data binding: the model values are automatically assigned to HTML elements specified(xác d?nh) through data binding notation. but the HTML elements don't change the value in the model.

Two data binding: when a model variable is bound to a HTML elements that can changes and display the values of the variable.

Organize in scope: Scope are organized in a hierarchy. There is a $rootScope, the parent of all scope of the AngularJS appliation

Data-binding: data-binding in AngularJS apps is the automatic synchronization of data between model and view

Scalable code organization in AngularJS: using the module pattern( a module for each feature) to organizing your code  
Using Yeoman to scaffold a new AngularJS application 

 What is jQuery
A: A JavaScript Framework/Library that make things like DOM selection/manipulation, AJAX, and animation, easier.




